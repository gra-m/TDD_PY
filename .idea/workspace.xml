<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="63445f2c-c5e8-4178-ae2e-33268b555554" name="Changes" comment="round tests OK, made comment private functions.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tictactoe/Board.py" beforeDir="false" afterPath="$PROJECT_DIR$/tictactoe/Board.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tictactoe/Round.py" beforeDir="false" afterPath="$PROJECT_DIR$/tictactoe/Round.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tictactoe/TicTacToe.py" beforeDir="false" afterPath="$PROJECT_DIR$/tictactoe/TicTacToe.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;gra-m&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/gra-m/TDD_PY.git&quot;,
    &quot;accountId&quot;: &quot;9e51a78b-18b8-41b7-90be-32dab75aaae8&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2lxokSSwsWBBZI5V7DSNTcE3v0Q" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showScratchesAndConsoles" value="false" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for bootstrap.TestCaseTest.test_setup_exception_caught.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.test_is_win_column_winner.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.test_is_win_diagonal_winner.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.test_is_win_no_winner.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.test_is_win_other_diagonal_winner.executor": "Run",
    "Python tests.Python tests for test_Board.BoardTestCase.test_is_win_row_winner.executor": "Run",
    "Python tests.Python tests for test_Board.TestBoard.test_has_valid_moves.executor": "Run",
    "Python tests.Python tests for test_Board2.TestGetValidMovesFunction.executor": "Run",
    "Python tests.Python tests for test_Board2.Test_get_valid_moves_Function.executor": "Run",
    "Python tests.Python tests for test_Board2.Test_get_valid_moves_Function.test_get_valid_moves_board_with_invalid_characters.executor": "Run",
    "Python tests.Python tests for test_Board2.Test_get_valid_moves_Function.test_get_valid_moves_empty_board.executor": "Run",
    "Python tests.Python tests for test_Board2.Test_get_valid_moves_Function.test_get_valid_moves_full_board.executor": "Run",
    "Python tests.Python tests for test_Board2.Test_get_valid_moves_Function.test_get_valid_moves_one_move_made.executor": "Run",
    "Python tests.Python tests for test_Board3.TestBoardGetEncodedState.executor": "Run",
    "Python tests.Python tests for test_Board3.TestBoardGetEncodedState.test_get_encoded_state_black_wins.executor": "Run",
    "Python tests.Python tests for test_Board3.TestBoardGetEncodedState.test_get_encoded_state_empty_board.executor": "Run",
    "Python tests.Python tests for test_Board3.TestBoardGetEncodedState.test_get_encoded_state_white_and_black_moves.executor": "Run",
    "Python tests.Python tests for test_Board3.TestBoardGetEncodedState.test_get_encoded_state_white_wins.executor": "Run",
    "Python tests.Python tests for test_Board4.BoardExecuteMoveTestCase.executor": "Run",
    "Python tests.Python tests for test_Board4.BoardExecuteMoveTestCase.test_execute_move_invalid_move.executor": "Run",
    "Python tests.Python tests for test_Board4.BoardExecuteMoveTestCase.test_execute_move_on_populated_board.executor": "Run",
    "Python tests.Python tests for test_Board4.BoardExecuteMoveTestCase.test_execute_move_valid_move.executor": "Run",
    "Python tests.Python tests for test_Game.TestCase.executor": "Run",
    "Python tests.Python tests for test_Game.TestCase.test_init.executor": "Run",
    "Python tests.Python tests for test_round.TestCase.executor": "Run",
    "Python tests.Python tests for test_round.TestCase.test_action_not_valid.executor": "Run",
    "Python tests.Python tests for test_round.TestCase.test_game_draw.executor": "Run",
    "Python tests.Python tests for test_round.TestCase.test_init.executor": "Run",
    "Python tests.Python tests in test_Board4.py.executor": "Run",
    "Python.Round.executor": "Run",
    "Python.bootstrap.executor": "Run",
    "Python.test_case.executor": "Run",
    "Python.test_case_bootstrap.executor": "Run",
    "Python.unit_testing_helper.executor": "Run",
    "Python.was_run.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Gram/IdeaProjects/Code_Site_CC",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.54022986",
    "settings.editor.selected.configurable": "ml.llm.AIAssistantPromptsLibrary",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Gram\IdeaProjects\TDD_PY\tictactoe" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Round">
    <configuration name="Round" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="TDD_PY" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tictactoe" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/tictactoe/Round.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_Board4.BoardExecuteMoveTestCase.test_execute_move_invalid_move" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TDD_PY" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tictactoe/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_Board4.BoardExecuteMoveTestCase.test_execute_move_invalid_move&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_round.TestCase" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TDD_PY" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tictactoe/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_round.TestCase&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_round.TestCase.test_game_draw" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TDD_PY" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tictactoe/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_round.TestCase.test_game_draw&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_round.TestCase.test_init" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TDD_PY" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tictactoe/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_round.TestCase.test_init&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.Round" />
        <item itemvalue="Python tests.Python tests for test_round.TestCase.test_game_draw" />
        <item itemvalue="Python tests.Python tests for test_round.TestCase" />
        <item itemvalue="Python tests.Python tests for test_round.TestCase.test_init" />
        <item itemvalue="Python tests.Python tests for test_Board4.BoardExecuteMoveTestCase.test_execute_move_invalid_move" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193" />
        <option value="bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="63445f2c-c5e8-4178-ae2e-33268b555554" name="Changes" comment="" />
      <created>1726131232668</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726131232668</updated>
      <workItem from="1726131234933" duration="190000" />
      <workItem from="1726131442861" duration="34648000" />
      <workItem from="1726241783172" duration="545000" />
      <workItem from="1726742162831" duration="142000" />
      <workItem from="1731430926924" duration="5890000" />
      <workItem from="1731495118526" duration="3548000" />
      <workItem from="1731587255149" duration="12376000" />
      <workItem from="1731599842581" duration="3142000" />
      <workItem from="1731660389135" duration="5528000" />
      <workItem from="1731691112009" duration="11321000" />
      <workItem from="1731767608668" duration="4735000" />
    </task>
    <task id="LOCAL-00001" summary="xunit in one file bootstrap dir.">
      <option name="closed" value="true" />
      <created>1726134512338</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1726134512338</updated>
    </task>
    <task id="LOCAL-00002" summary="attempting to make code self-explanatory with descriptive variable names">
      <option name="closed" value="true" />
      <created>1726135555118</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1726135555118</updated>
    </task>
    <task id="LOCAL-00003" summary="Asserts replace log prints with tracepoints that print when run in debug.">
      <option name="closed" value="true" />
      <created>1726135997195</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1726135997195</updated>
    </task>
    <task id="LOCAL-00004" summary="TestCaseTest run via test_running and runs was run 'test_method'">
      <option name="closed" value="true" />
      <created>1726137695582</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1726137695582</updated>
    </task>
    <task id="LOCAL-00005" summary="tracepoints added, workspace.xml committed to keep these.">
      <option name="closed" value="true" />
      <created>1726138862525</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1726138862525</updated>
    </task>
    <task id="LOCAL-00006" summary="WasRun instance var 'test' created in set up">
      <option name="closed" value="true" />
      <created>1726140811085</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1726140811085</updated>
    </task>
    <task id="LOCAL-00007" summary="log introduced">
      <option name="closed" value="true" />
      <created>1726142557310</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1726142557310</updated>
    </task>
    <task id="LOCAL-00008" summary="set up and test_method checked together in def test_template_method. Debug Tracepoint outputs: Log == setup_OK|test_method_OK| correct = True">
      <option name="closed" value="true" />
      <created>1726143953905</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1726143953905</updated>
    </task>
    <task id="LOCAL-00009" summary="bit of checking and clarification, alternate to book I am keeping instance var of WasRun at this point. comments added for clarity.">
      <option name="closed" value="true" />
      <created>1726146273546</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1726146273546</updated>
    </task>
    <task id="LOCAL-00010" summary="Tear down test working">
      <option name="closed" value="true" />
      <created>1726149549526</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1726149549526</updated>
    </task>
    <task id="LOCAL-00011" summary="dummy test_result implementation passing.">
      <option name="closed" value="true" />
      <created>1726150159161</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1726150159161</updated>
    </task>
    <task id="LOCAL-00012" summary="result summary">
      <option name="closed" value="true" />
      <created>1726152042859</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1726152042859</updated>
    </task>
    <task id="LOCAL-00013" summary="test_failed_result mimics failure but does not report it.">
      <option name="closed" value="true" />
      <created>1726152522602</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1726152522602</updated>
    </task>
    <task id="LOCAL-00014" summary="test_failed_result_formatting test added and passing.">
      <option name="closed" value="true" />
      <created>1726158016312</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1726158016312</updated>
    </task>
    <task id="LOCAL-00015" summary="Added simple logging and TestFailedException">
      <option name="closed" value="true" />
      <created>1726160320870</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1726160320870</updated>
    </task>
    <task id="LOCAL-00016" summary="tried to use unittest assertraises but it filled console with issues, tried to solve with AI help, but eventually simplest solution was to create helper class that tries the passed function and catches the expected exception. Added warning for when Assertion errors are turned off.">
      <option name="closed" value="true" />
      <created>1726171657243</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1726171657243</updated>
    </task>
    <task id="LOCAL-00017" summary="before using board size values.">
      <option name="closed" value="true" />
      <created>1731593594405</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1731593594405</updated>
    </task>
    <task id="LOCAL-00018" summary="All tests passing.">
      <option name="closed" value="true" />
      <created>1731599726072</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1731599726072</updated>
    </task>
    <task id="LOCAL-00019" summary="test board4">
      <option name="closed" value="true" />
      <created>1731660476754</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1731660476754</updated>
    </task>
    <task id="LOCAL-00020" summary="test board4">
      <option name="closed" value="true" />
      <created>1731660521460</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1731660521460</updated>
    </task>
    <task id="LOCAL-00021" summary="Game tests running">
      <option name="closed" value="true" />
      <created>1731665769417</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1731665769417</updated>
    </task>
    <option name="localTasksCounter" value="22" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="xunit in one file bootstrap dir." />
    <MESSAGE value="attempting to make code self-explanatory with descriptive variable names" />
    <MESSAGE value="Asserts replace log prints with tracepoints that print when run in debug." />
    <MESSAGE value="TestCaseTest run via test_running and runs was run 'test_method'" />
    <MESSAGE value="tracepoints added, workspace.xml committed to keep these." />
    <MESSAGE value="WasRun instance var 'test' created in set up" />
    <MESSAGE value="log introduced" />
    <MESSAGE value="set up and test_method checked together in def test_template_method. Debug Tracepoint outputs: Log == setup_OK|test_method_OK| correct = True" />
    <MESSAGE value="bit of checking and clarification, alternate to book I am keeping instance var of WasRun at this point. comments added for clarity." />
    <MESSAGE value="Tear down test working" />
    <MESSAGE value="dummy test_result implementation passing." />
    <MESSAGE value="result summary" />
    <MESSAGE value="test_failed_result mimics failure but does not report it." />
    <MESSAGE value="test_failed_result_formatting test added and passing." />
    <MESSAGE value="Added simple logging and TestFailedException" />
    <MESSAGE value="tried to use unittest assertraises but it filled console with issues, tried to solve with AI help, but eventually simplest solution was to create helper class that tries the passed function and catches the expected exception. Added warning for when Assertion errors are turned off." />
    <MESSAGE value="before using board size values." />
    <MESSAGE value="All tests passing." />
    <MESSAGE value="test board4" />
    <MESSAGE value="Game tests running" />
    <MESSAGE value="round tests OK, made comment private functions." />
    <option name="LAST_COMMIT_MESSAGE" value="round tests OK, made comment private functions." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="NONE" type="python-line">
          <url>file://$PROJECT_DIR$/xunit/bootstrap/bootstrap.py</url>
          <line>92</line>
          <log-expression expression="print (f&quot;Log == {self.test.log} correct = {self.test.log == 'setup_OK|test_method_OK|tear_down_OK|'}&quot;)" language="Python" mode="CODE_FRAGMENT" />
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="NONE" type="python-line">
          <url>file://$PROJECT_DIR$/xunit/bootstrap/bootstrap.py</url>
          <line>97</line>
          <log-expression expression="print(f&quot;Result.summary() as expected == {result.summary()} correct = {result.summary() == &quot;1 run, 0 failed&quot;}&quot;)" language="Python" />
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="NONE" type="python-line">
          <url>file://$PROJECT_DIR$/xunit/bootstrap/bootstrap.py</url>
          <line>108</line>
          <log-expression expression="print(f&quot;Result.summary() as expected == {result.summary()} correct = {result.summary() == &quot;1 run, 1 failed&quot;}&quot;)" language="Python" mode="CODE_FRAGMENT" />
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="NONE" type="python-line">
          <url>file://$PROJECT_DIR$/xunit/bootstrap/bootstrap.py</url>
          <line>102</line>
          <log-expression expression="print(f&quot;Result.summary() as expected == {result.summary()} correct = {result.summary() == &quot;1 run, 0 failed&quot;}&quot;)" language="Python" mode="CODE_FRAGMENT" />
          <option name="timeStamp" value="10" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/TDD_PY$unit_testing_helper.coverage" NAME="unit_testing_helper Coverage Results" MODIFIED="1726169560333" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/xunit/bootstrap" />
    <SUITE FILE_PATH="coverage/TDD_PY$Round.coverage" NAME="Round Coverage Results" MODIFIED="1731774373698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tictactoe" />
    <SUITE FILE_PATH="coverage/TDD_PY$test_case.coverage" NAME="test_case Coverage Results" MODIFIED="1726132208325" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/xunit" />
    <SUITE FILE_PATH="coverage/TDD_PY$.coverage" NAME=" Coverage Results" MODIFIED="1731768258460" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tictactoe/tests" />
    <SUITE FILE_PATH="coverage/TDD_PY$bootstrap.coverage" NAME="bootstrap Coverage Results" MODIFIED="1726171248760" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/xunit/bootstrap" />
    <SUITE FILE_PATH="coverage/TDD_PY$test_case_bootstrap.coverage" NAME="test_case_bootstrap Coverage Results" MODIFIED="1726132683202" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/xunit" />
    <SUITE FILE_PATH="coverage/TDD_PY$was_run.coverage" NAME="was_run Coverage Results" MODIFIED="1726132564763" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/xunit" />
  </component>
</project>